# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import events_pb2 as events__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class EventosServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateEvent = channel.unary_unary(
                '/ong.events.EventosService/CreateEvent',
                request_serializer=events__pb2.CreateEventRequest.SerializeToString,
                response_deserializer=events__pb2.Event.FromString,
                )
        self.UpdateEvent = channel.unary_unary(
                '/ong.events.EventosService/UpdateEvent',
                request_serializer=events__pb2.UpdateEventRequest.SerializeToString,
                response_deserializer=events__pb2.Event.FromString,
                )
        self.DeleteFutureEvent = channel.unary_unary(
                '/ong.events.EventosService/DeleteFutureEvent',
                request_serializer=events__pb2.EventIdRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.AssignOrRemoveMember = channel.unary_unary(
                '/ong.events.EventosService/AssignOrRemoveMember',
                request_serializer=events__pb2.MemberChangeRequest.SerializeToString,
                response_deserializer=events__pb2.Event.FromString,
                )
        self.RegisterDistributions = channel.unary_unary(
                '/ong.events.EventosService/RegisterDistributions',
                request_serializer=events__pb2.RegisterDistributionRequest.SerializeToString,
                response_deserializer=events__pb2.Event.FromString,
                )
        self.ListEvents = channel.unary_unary(
                '/ong.events.EventosService/ListEvents',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=events__pb2.EventList.FromString,
                )


class EventosServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateEvent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateEvent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteFutureEvent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AssignOrRemoveMember(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterDistributions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListEvents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EventosServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateEvent,
                    request_deserializer=events__pb2.CreateEventRequest.FromString,
                    response_serializer=events__pb2.Event.SerializeToString,
            ),
            'UpdateEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateEvent,
                    request_deserializer=events__pb2.UpdateEventRequest.FromString,
                    response_serializer=events__pb2.Event.SerializeToString,
            ),
            'DeleteFutureEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteFutureEvent,
                    request_deserializer=events__pb2.EventIdRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'AssignOrRemoveMember': grpc.unary_unary_rpc_method_handler(
                    servicer.AssignOrRemoveMember,
                    request_deserializer=events__pb2.MemberChangeRequest.FromString,
                    response_serializer=events__pb2.Event.SerializeToString,
            ),
            'RegisterDistributions': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterDistributions,
                    request_deserializer=events__pb2.RegisterDistributionRequest.FromString,
                    response_serializer=events__pb2.Event.SerializeToString,
            ),
            'ListEvents': grpc.unary_unary_rpc_method_handler(
                    servicer.ListEvents,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=events__pb2.EventList.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ong.events.EventosService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class EventosService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ong.events.EventosService/CreateEvent',
            events__pb2.CreateEventRequest.SerializeToString,
            events__pb2.Event.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ong.events.EventosService/UpdateEvent',
            events__pb2.UpdateEventRequest.SerializeToString,
            events__pb2.Event.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteFutureEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ong.events.EventosService/DeleteFutureEvent',
            events__pb2.EventIdRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AssignOrRemoveMember(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ong.events.EventosService/AssignOrRemoveMember',
            events__pb2.MemberChangeRequest.SerializeToString,
            events__pb2.Event.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterDistributions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ong.events.EventosService/RegisterDistributions',
            events__pb2.RegisterDistributionRequest.SerializeToString,
            events__pb2.Event.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ong.events.EventosService/ListEvents',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            events__pb2.EventList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
